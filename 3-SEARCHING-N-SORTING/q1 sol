#include <stdio.h>
int count1, count2, count3;

int binary1( int arr[], int k, int flag1, int flag2)
{
	
	if(flag1>flag2) return -1;
	int flag;
	flag = flag1 + ((flag2 -flag1)/2);
	
	count1++;

	if(k==arr[flag]) return flag;
	if(k==arr[flag1]) return flag1;
	if(k==arr[flag2]) return flag2;	
	if(flag1==flag2) return -1;

	count1++;

	if(k>arr[flag])
	{
		count1++;
		if(flag==0) return -1;
		return binary1( arr, k, flag+1, flag2);
	}

	count1++;

	if(k<arr[flag])
	{
		count1++;
		if(flag==0) return -1;
		return binary1( arr, k, flag1, flag-1);
	}
	return -1;
}

int binary2( int arr[], int k, int flag1, int flag2)
{
	if(flag1>flag2) return -1;
	int flag;
	flag = flag1 + (flag2 -flag1)/3 ;

	count2++;

	if(k==arr[flag]) return flag;
	if(k==arr[flag1]) return flag1;
	if(k==arr[flag2]) return flag2;
	if(flag1==flag2) return -1;

	count2++;

	if(k>arr[flag])
	{
		return binary2( arr, k, flag+1, flag2);
	}

	count2++;

	if(k<arr[flag])
	{
		return binary2( arr, k, flag1, flag-1);
	}
	return -1;
}

int trinary( int arr[], int k, int flag1, int flag2)
{
	if(flag1>flag2) return -1;
	int flag3, flag4;
	flag3 = flag1 + (flag2 -flag1)/3 ;
	flag4 = flag1 + (2*(flag2 -flag1)/3) +1 ;

	count3++;

	if(k==arr[flag3]) return flag3;
	if(k==arr[flag4]) return flag4;
	if(flag1==flag2) return -1;
	if(k>arr[flag4])
	{
		if(flag4==0) return -1;
		return trinary( arr, k, flag4+1, flag2);
	}

	count3++;

	if((k>arr[flag3])&&(k<arr[flag4]))
	{
		if(flag3==0) return -1;
		return trinary( arr, k, flag3+1, flag4-1);
	}

	count3++;

	if(k<arr[flag3])
	{
		if(flag3==0) return -1;
		return trinary( arr, k, flag1, flag3-1);
	}
	return -1;
}

int main()
{
	int n, k, i;
	scanf("%d",&n);
	int arr[n];
	count1=0; count2=0; count3=0;
	for(i=0;i<n;i++)
	{
		scanf("%d",&arr[i]);
	}
	scanf("%d",&k);
	printf("%d ", binary1(arr, k, 0, n-1));
	printf("%d ", binary2(arr, k, 0, n-1));
	printf("%d \n", trinary(arr, k, 0, n-1));
	printf("%d %d %d\n", count1, count2, count3);
	return 0;
}
